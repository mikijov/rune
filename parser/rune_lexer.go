// Generated from Rune.g4 by ANTLR 4.7.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

import (
	"github.com/mikijov/rune/vm"
)

var _ vm.Type // inhibit unused import error

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 55, 315,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 4,
	39, 9, 39, 4, 40, 9, 40, 4, 41, 9, 41, 4, 42, 9, 42, 4, 43, 9, 43, 4, 44,
	9, 44, 4, 45, 9, 45, 4, 46, 9, 46, 4, 47, 9, 47, 4, 48, 9, 48, 4, 49, 9,
	49, 4, 50, 9, 50, 4, 51, 9, 51, 4, 52, 9, 52, 4, 53, 9, 53, 4, 54, 9, 54,
	3, 2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 6,
	3, 6, 3, 6, 3, 7, 3, 7, 3, 7, 3, 7, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 9,
	3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10,
	3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 12, 3, 12, 3, 13, 3, 13, 3, 14, 3,
	14, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 16, 3, 16, 3, 17,
	3, 17, 3, 18, 3, 18, 3, 18, 3, 18, 3, 18, 3, 18, 3, 18, 3, 19, 3, 19, 3,
	19, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 21, 3, 21, 3, 21, 3, 21, 3, 21,
	3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 23, 3, 23, 3, 24, 3, 24, 3,
	25, 3, 25, 3, 26, 3, 26, 3, 27, 3, 27, 3, 28, 3, 28, 3, 29, 3, 29, 3, 30,
	3, 30, 3, 31, 3, 31, 3, 32, 3, 32, 3, 33, 3, 33, 3, 34, 3, 34, 3, 34, 3,
	35, 3, 35, 3, 35, 3, 36, 3, 36, 3, 36, 3, 37, 3, 37, 3, 37, 3, 38, 3, 38,
	3, 38, 3, 38, 3, 39, 3, 39, 3, 39, 3, 40, 3, 40, 3, 40, 3, 41, 3, 41, 3,
	41, 3, 42, 3, 42, 3, 42, 3, 43, 3, 43, 3, 43, 3, 44, 3, 44, 3, 44, 3, 45,
	3, 45, 3, 45, 3, 46, 3, 46, 3, 46, 3, 47, 3, 47, 3, 47, 3, 48, 6, 48, 259,
	10, 48, 13, 48, 14, 48, 260, 3, 49, 7, 49, 264, 10, 49, 12, 49, 14, 49,
	267, 11, 49, 3, 49, 3, 49, 6, 49, 271, 10, 49, 13, 49, 14, 49, 272, 3,
	50, 3, 50, 3, 50, 3, 50, 3, 50, 3, 50, 3, 50, 3, 50, 3, 50, 5, 50, 284,
	10, 50, 3, 51, 3, 51, 7, 51, 288, 10, 51, 12, 51, 14, 51, 291, 11, 51,
	3, 52, 5, 52, 294, 10, 52, 3, 52, 3, 52, 3, 52, 3, 52, 3, 53, 6, 53, 301,
	10, 53, 13, 53, 14, 53, 302, 3, 53, 3, 53, 3, 54, 3, 54, 7, 54, 309, 10,
	54, 12, 54, 14, 54, 312, 11, 54, 3, 54, 3, 54, 2, 2, 55, 3, 3, 5, 4, 7,
	5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13, 25, 14, 27,
	15, 29, 16, 31, 17, 33, 18, 35, 19, 37, 20, 39, 21, 41, 22, 43, 23, 45,
	24, 47, 25, 49, 26, 51, 27, 53, 28, 55, 29, 57, 30, 59, 31, 61, 32, 63,
	33, 65, 34, 67, 35, 69, 36, 71, 37, 73, 38, 75, 39, 77, 40, 79, 41, 81,
	42, 83, 43, 85, 44, 87, 45, 89, 46, 91, 47, 93, 48, 95, 49, 97, 50, 99,
	51, 101, 52, 103, 53, 105, 54, 107, 55, 3, 2, 7, 3, 2, 50, 59, 5, 2, 67,
	92, 97, 97, 99, 124, 6, 2, 50, 59, 67, 92, 97, 97, 99, 124, 4, 2, 11, 11,
	34, 34, 4, 2, 12, 12, 15, 15, 2, 322, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2,
	2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2,
	2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3,
	2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29,
	3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2,
	37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2,
	2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2, 51, 3, 2, 2,
	2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2, 2, 59, 3, 2,
	2, 2, 2, 61, 3, 2, 2, 2, 2, 63, 3, 2, 2, 2, 2, 65, 3, 2, 2, 2, 2, 67, 3,
	2, 2, 2, 2, 69, 3, 2, 2, 2, 2, 71, 3, 2, 2, 2, 2, 73, 3, 2, 2, 2, 2, 75,
	3, 2, 2, 2, 2, 77, 3, 2, 2, 2, 2, 79, 3, 2, 2, 2, 2, 81, 3, 2, 2, 2, 2,
	83, 3, 2, 2, 2, 2, 85, 3, 2, 2, 2, 2, 87, 3, 2, 2, 2, 2, 89, 3, 2, 2, 2,
	2, 91, 3, 2, 2, 2, 2, 93, 3, 2, 2, 2, 2, 95, 3, 2, 2, 2, 2, 97, 3, 2, 2,
	2, 2, 99, 3, 2, 2, 2, 2, 101, 3, 2, 2, 2, 2, 103, 3, 2, 2, 2, 2, 105, 3,
	2, 2, 2, 2, 107, 3, 2, 2, 2, 3, 109, 3, 2, 2, 2, 5, 111, 3, 2, 2, 2, 7,
	114, 3, 2, 2, 2, 9, 116, 3, 2, 2, 2, 11, 118, 3, 2, 2, 2, 13, 123, 3, 2,
	2, 2, 15, 127, 3, 2, 2, 2, 17, 132, 3, 2, 2, 2, 19, 139, 3, 2, 2, 2, 21,
	144, 3, 2, 2, 2, 23, 149, 3, 2, 2, 2, 25, 151, 3, 2, 2, 2, 27, 153, 3,
	2, 2, 2, 29, 155, 3, 2, 2, 2, 31, 162, 3, 2, 2, 2, 33, 164, 3, 2, 2, 2,
	35, 166, 3, 2, 2, 2, 37, 173, 3, 2, 2, 2, 39, 176, 3, 2, 2, 2, 41, 181,
	3, 2, 2, 2, 43, 186, 3, 2, 2, 2, 45, 192, 3, 2, 2, 2, 47, 194, 3, 2, 2,
	2, 49, 196, 3, 2, 2, 2, 51, 198, 3, 2, 2, 2, 53, 200, 3, 2, 2, 2, 55, 202,
	3, 2, 2, 2, 57, 204, 3, 2, 2, 2, 59, 206, 3, 2, 2, 2, 61, 208, 3, 2, 2,
	2, 63, 210, 3, 2, 2, 2, 65, 212, 3, 2, 2, 2, 67, 214, 3, 2, 2, 2, 69, 217,
	3, 2, 2, 2, 71, 220, 3, 2, 2, 2, 73, 223, 3, 2, 2, 2, 75, 226, 3, 2, 2,
	2, 77, 230, 3, 2, 2, 2, 79, 233, 3, 2, 2, 2, 81, 236, 3, 2, 2, 2, 83, 239,
	3, 2, 2, 2, 85, 242, 3, 2, 2, 2, 87, 245, 3, 2, 2, 2, 89, 248, 3, 2, 2,
	2, 91, 251, 3, 2, 2, 2, 93, 254, 3, 2, 2, 2, 95, 258, 3, 2, 2, 2, 97, 265,
	3, 2, 2, 2, 99, 283, 3, 2, 2, 2, 101, 285, 3, 2, 2, 2, 103, 293, 3, 2,
	2, 2, 105, 300, 3, 2, 2, 2, 107, 306, 3, 2, 2, 2, 109, 110, 7, 61, 2, 2,
	110, 4, 3, 2, 2, 2, 111, 112, 7, 60, 2, 2, 112, 113, 7, 63, 2, 2, 113,
	6, 3, 2, 2, 2, 114, 115, 7, 60, 2, 2, 115, 8, 3, 2, 2, 2, 116, 117, 7,
	63, 2, 2, 117, 10, 3, 2, 2, 2, 118, 119, 7, 118, 2, 2, 119, 120, 7, 123,
	2, 2, 120, 121, 7, 114, 2, 2, 121, 122, 7, 103, 2, 2, 122, 12, 3, 2, 2,
	2, 123, 124, 7, 107, 2, 2, 124, 125, 7, 112, 2, 2, 125, 126, 7, 118, 2,
	2, 126, 14, 3, 2, 2, 2, 127, 128, 7, 116, 2, 2, 128, 129, 7, 103, 2, 2,
	129, 130, 7, 99, 2, 2, 130, 131, 7, 110, 2, 2, 131, 16, 3, 2, 2, 2, 132,
	133, 7, 117, 2, 2, 133, 134, 7, 118, 2, 2, 134, 135, 7, 116, 2, 2, 135,
	136, 7, 107, 2, 2, 136, 137, 7, 112, 2, 2, 137, 138, 7, 105, 2, 2, 138,
	18, 3, 2, 2, 2, 139, 140, 7, 100, 2, 2, 140, 141, 7, 113, 2, 2, 141, 142,
	7, 113, 2, 2, 142, 143, 7, 110, 2, 2, 143, 20, 3, 2, 2, 2, 144, 145, 7,
	104, 2, 2, 145, 146, 7, 119, 2, 2, 146, 147, 7, 112, 2, 2, 147, 148, 7,
	101, 2, 2, 148, 22, 3, 2, 2, 2, 149, 150, 7, 42, 2, 2, 150, 24, 3, 2, 2,
	2, 151, 152, 7, 46, 2, 2, 152, 26, 3, 2, 2, 2, 153, 154, 7, 43, 2, 2, 154,
	28, 3, 2, 2, 2, 155, 156, 7, 117, 2, 2, 156, 157, 7, 118, 2, 2, 157, 158,
	7, 116, 2, 2, 158, 159, 7, 119, 2, 2, 159, 160, 7, 101, 2, 2, 160, 161,
	7, 118, 2, 2, 161, 30, 3, 2, 2, 2, 162, 163, 7, 125, 2, 2, 163, 32, 3,
	2, 2, 2, 164, 165, 7, 127, 2, 2, 165, 34, 3, 2, 2, 2, 166, 167, 7, 116,
	2, 2, 167, 168, 7, 103, 2, 2, 168, 169, 7, 118, 2, 2, 169, 170, 7, 119,
	2, 2, 170, 171, 7, 116, 2, 2, 171, 172, 7, 112, 2, 2, 172, 36, 3, 2, 2,
	2, 173, 174, 7, 107, 2, 2, 174, 175, 7, 104, 2, 2, 175, 38, 3, 2, 2, 2,
	176, 177, 7, 103, 2, 2, 177, 178, 7, 110, 2, 2, 178, 179, 7, 117, 2, 2,
	179, 180, 7, 103, 2, 2, 180, 40, 3, 2, 2, 2, 181, 182, 7, 110, 2, 2, 182,
	183, 7, 113, 2, 2, 183, 184, 7, 113, 2, 2, 184, 185, 7, 114, 2, 2, 185,
	42, 3, 2, 2, 2, 186, 187, 7, 121, 2, 2, 187, 188, 7, 106, 2, 2, 188, 189,
	7, 107, 2, 2, 189, 190, 7, 110, 2, 2, 190, 191, 7, 103, 2, 2, 191, 44,
	3, 2, 2, 2, 192, 193, 7, 48, 2, 2, 193, 46, 3, 2, 2, 2, 194, 195, 7, 44,
	2, 2, 195, 48, 3, 2, 2, 2, 196, 197, 7, 49, 2, 2, 197, 50, 3, 2, 2, 2,
	198, 199, 7, 39, 2, 2, 199, 52, 3, 2, 2, 2, 200, 201, 7, 40, 2, 2, 201,
	54, 3, 2, 2, 2, 202, 203, 7, 45, 2, 2, 203, 56, 3, 2, 2, 2, 204, 205, 7,
	47, 2, 2, 205, 58, 3, 2, 2, 2, 206, 207, 7, 126, 2, 2, 207, 60, 3, 2, 2,
	2, 208, 209, 7, 96, 2, 2, 209, 62, 3, 2, 2, 2, 210, 211, 7, 62, 2, 2, 211,
	64, 3, 2, 2, 2, 212, 213, 7, 64, 2, 2, 213, 66, 3, 2, 2, 2, 214, 215, 7,
	63, 2, 2, 215, 216, 7, 63, 2, 2, 216, 68, 3, 2, 2, 2, 217, 218, 7, 64,
	2, 2, 218, 219, 7, 63, 2, 2, 219, 70, 3, 2, 2, 2, 220, 221, 7, 62, 2, 2,
	221, 222, 7, 63, 2, 2, 222, 72, 3, 2, 2, 2, 223, 224, 7, 35, 2, 2, 224,
	225, 7, 63, 2, 2, 225, 74, 3, 2, 2, 2, 226, 227, 7, 99, 2, 2, 227, 228,
	7, 112, 2, 2, 228, 229, 7, 102, 2, 2, 229, 76, 3, 2, 2, 2, 230, 231, 7,
	113, 2, 2, 231, 232, 7, 116, 2, 2, 232, 78, 3, 2, 2, 2, 233, 234, 7, 45,
	2, 2, 234, 235, 7, 63, 2, 2, 235, 80, 3, 2, 2, 2, 236, 237, 7, 47, 2, 2,
	237, 238, 7, 63, 2, 2, 238, 82, 3, 2, 2, 2, 239, 240, 7, 44, 2, 2, 240,
	241, 7, 63, 2, 2, 241, 84, 3, 2, 2, 2, 242, 243, 7, 49, 2, 2, 243, 244,
	7, 63, 2, 2, 244, 86, 3, 2, 2, 2, 245, 246, 7, 39, 2, 2, 246, 247, 7, 63,
	2, 2, 247, 88, 3, 2, 2, 2, 248, 249, 7, 40, 2, 2, 249, 250, 7, 63, 2, 2,
	250, 90, 3, 2, 2, 2, 251, 252, 7, 126, 2, 2, 252, 253, 7, 63, 2, 2, 253,
	92, 3, 2, 2, 2, 254, 255, 7, 96, 2, 2, 255, 256, 7, 63, 2, 2, 256, 94,
	3, 2, 2, 2, 257, 259, 9, 2, 2, 2, 258, 257, 3, 2, 2, 2, 259, 260, 3, 2,
	2, 2, 260, 258, 3, 2, 2, 2, 260, 261, 3, 2, 2, 2, 261, 96, 3, 2, 2, 2,
	262, 264, 9, 2, 2, 2, 263, 262, 3, 2, 2, 2, 264, 267, 3, 2, 2, 2, 265,
	263, 3, 2, 2, 2, 265, 266, 3, 2, 2, 2, 266, 268, 3, 2, 2, 2, 267, 265,
	3, 2, 2, 2, 268, 270, 7, 48, 2, 2, 269, 271, 9, 2, 2, 2, 270, 269, 3, 2,
	2, 2, 271, 272, 3, 2, 2, 2, 272, 270, 3, 2, 2, 2, 272, 273, 3, 2, 2, 2,
	273, 98, 3, 2, 2, 2, 274, 275, 7, 118, 2, 2, 275, 276, 7, 116, 2, 2, 276,
	277, 7, 119, 2, 2, 277, 284, 7, 103, 2, 2, 278, 279, 7, 104, 2, 2, 279,
	280, 7, 99, 2, 2, 280, 281, 7, 110, 2, 2, 281, 282, 7, 117, 2, 2, 282,
	284, 7, 103, 2, 2, 283, 274, 3, 2, 2, 2, 283, 278, 3, 2, 2, 2, 284, 100,
	3, 2, 2, 2, 285, 289, 9, 3, 2, 2, 286, 288, 9, 4, 2, 2, 287, 286, 3, 2,
	2, 2, 288, 291, 3, 2, 2, 2, 289, 287, 3, 2, 2, 2, 289, 290, 3, 2, 2, 2,
	290, 102, 3, 2, 2, 2, 291, 289, 3, 2, 2, 2, 292, 294, 7, 15, 2, 2, 293,
	292, 3, 2, 2, 2, 293, 294, 3, 2, 2, 2, 294, 295, 3, 2, 2, 2, 295, 296,
	7, 12, 2, 2, 296, 297, 3, 2, 2, 2, 297, 298, 8, 52, 2, 2, 298, 104, 3,
	2, 2, 2, 299, 301, 9, 5, 2, 2, 300, 299, 3, 2, 2, 2, 301, 302, 3, 2, 2,
	2, 302, 300, 3, 2, 2, 2, 302, 303, 3, 2, 2, 2, 303, 304, 3, 2, 2, 2, 304,
	305, 8, 53, 2, 2, 305, 106, 3, 2, 2, 2, 306, 310, 7, 37, 2, 2, 307, 309,
	10, 6, 2, 2, 308, 307, 3, 2, 2, 2, 309, 312, 3, 2, 2, 2, 310, 308, 3, 2,
	2, 2, 310, 311, 3, 2, 2, 2, 311, 313, 3, 2, 2, 2, 312, 310, 3, 2, 2, 2,
	313, 314, 8, 54, 2, 2, 314, 108, 3, 2, 2, 2, 11, 2, 260, 265, 272, 283,
	289, 293, 302, 310, 3, 8, 2, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "';'", "':='", "':'", "'='", "'type'", "'int'", "'real'", "'string'",
	"'bool'", "'func'", "'('", "','", "')'", "'struct'", "'{'", "'}'", "'return'",
	"'if'", "'else'", "'loop'", "'while'", "'.'", "'*'", "'/'", "'%'", "'&'",
	"'+'", "'-'", "'|'", "'^'", "'<'", "'>'", "'=='", "'>='", "'<='", "'!='",
	"'and'", "'or'", "'+='", "'-='", "'*='", "'/='", "'%='", "'&='", "'|='",
	"'^='",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
	"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
	"", "", "", "", "", "", "", "", "", "", "", "INTEGER_LITERAL", "REAL_LITERAL",
	"BOOLEAN_LITERAL", "IDENTIFIER", "LINENDING", "WHITESPACE", "COMMENT",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
	"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16",
	"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24",
	"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32",
	"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40",
	"T__41", "T__42", "T__43", "T__44", "T__45", "INTEGER_LITERAL", "REAL_LITERAL",
	"BOOLEAN_LITERAL", "IDENTIFIER", "LINENDING", "WHITESPACE", "COMMENT",
}

type RuneLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewRuneLexer(input antlr.CharStream) *RuneLexer {

	l := new(RuneLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "Rune.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// RuneLexer tokens.
const (
	RuneLexerT__0            = 1
	RuneLexerT__1            = 2
	RuneLexerT__2            = 3
	RuneLexerT__3            = 4
	RuneLexerT__4            = 5
	RuneLexerT__5            = 6
	RuneLexerT__6            = 7
	RuneLexerT__7            = 8
	RuneLexerT__8            = 9
	RuneLexerT__9            = 10
	RuneLexerT__10           = 11
	RuneLexerT__11           = 12
	RuneLexerT__12           = 13
	RuneLexerT__13           = 14
	RuneLexerT__14           = 15
	RuneLexerT__15           = 16
	RuneLexerT__16           = 17
	RuneLexerT__17           = 18
	RuneLexerT__18           = 19
	RuneLexerT__19           = 20
	RuneLexerT__20           = 21
	RuneLexerT__21           = 22
	RuneLexerT__22           = 23
	RuneLexerT__23           = 24
	RuneLexerT__24           = 25
	RuneLexerT__25           = 26
	RuneLexerT__26           = 27
	RuneLexerT__27           = 28
	RuneLexerT__28           = 29
	RuneLexerT__29           = 30
	RuneLexerT__30           = 31
	RuneLexerT__31           = 32
	RuneLexerT__32           = 33
	RuneLexerT__33           = 34
	RuneLexerT__34           = 35
	RuneLexerT__35           = 36
	RuneLexerT__36           = 37
	RuneLexerT__37           = 38
	RuneLexerT__38           = 39
	RuneLexerT__39           = 40
	RuneLexerT__40           = 41
	RuneLexerT__41           = 42
	RuneLexerT__42           = 43
	RuneLexerT__43           = 44
	RuneLexerT__44           = 45
	RuneLexerT__45           = 46
	RuneLexerINTEGER_LITERAL = 47
	RuneLexerREAL_LITERAL    = 48
	RuneLexerBOOLEAN_LITERAL = 49
	RuneLexerIDENTIFIER      = 50
	RuneLexerLINENDING       = 51
	RuneLexerWHITESPACE      = 52
	RuneLexerCOMMENT         = 53
)
